<?xml version="1.0"?>
<robot name="summit_xl"
    xmlns:xacro="http://ros.org/wiki/xacro">
    <xacro:macro name="inertial_box" params="size rho:=1000 xyz:='0 0 0' rpy:='0 0 0'">
        <xacro:property name="w" value="${size.split()[0]}" />
        <xacro:property name="d" value="${size.split()[1]}" />
        <xacro:property name="h" value="${size.split()[2]}" />
        <xacro:property name="mass" value="${rho*w*d*h}" />
        <inertial>
            <origin xyz="${xyz}" rpy="${rpy}" />
            <mass value="${mass}" />
            <inertia ixx="${(mass/12)*(h**2 + d**2)}" iyy="${(mass/12)*(w**2 + h**2)}"
                izz="${(mass/12)*(w**2 + d**2)}" ixy="0" ixz="0" iyz="0" />
        </inertial>
    </xacro:macro>
    <xacro:macro name="inertial_cylinder" params="length radius rho:=1000 xyz:='0 0 0' rpy:='0 0 0'">
        <xacro:property name="mass" value="${rho*pi*length*radius**2}" />
        <inertial>
            <origin xyz="${xyz}" rpy="${rpy}" />
            <mass value="${mass}" />
            <inertia ixx="${(mass/12)*(3*radius**2 + length**2)}"
                iyy="${(mass/12)*(3*radius**2 + length**2)}" izz="${(mass/2)*radius**2}" ixy="0"
                ixz="0" iyz="0" />
        </inertial>
    </xacro:macro>
    <xacro:macro name="inertial_sphere" params="radius rho:=1000 xyz:='0 0 0' rpy:='0 0 0'">
        <xacro:property name="mass" value="${4/3*rho*pi*radius**3}" />
        <inertial>
            <origin xyz="${xyz}" rpy="${rpy}" />
            <mass value="${mass}" />
            <inertia ixx="${(2/5*mass)*(radius**2)}" iyy="${(2/5*mass)*(radius**2)}"
                izz="${(2/5*mass)*(radius**2)}" ixy="0" ixz="0" iyz="0" />
        </inertial>
    </xacro:macro>
    <xacro:macro name="collision_cylinder" params="length radius xyz:='0 0 0' rpy:='0 0 0'">
        <collision>
            <origin xyz="${xyz}" rpy="${rpy}" />
            <geometry>
                <cylinder length="${length}" radius="${radius}" />
            </geometry>
        </collision>
    </xacro:macro>
    <xacro:macro name="collision_capsule" params="length radius xyz:='0 0 0' rpy:='0 0 0'">
        <collision>
            <origin xyz="${xyz}" rpy="${rpy}" />
            <geometry>
                <capsule length="${length}" radius="${radius}" />
            </geometry>
        </collision>
    </xacro:macro>
    <xacro:macro name="collision_box" params="size xyz:='0 0 0' rpy:='0 0 0'">
        <collision>
            <origin xyz="${xyz}" rpy="${rpy}" />
            <geometry>
                <box size="${size}" />
            </geometry>
        </collision>
    </xacro:macro>
    <xacro:macro name="collision_sphere" params="radius xyz:='0 0 0' rpy:='0 0 0'">
        <collision>
            <origin xyz="${xyz}" rpy="${rpy}" />
            <geometry>
                <sphere radius="${radius}" />
            </geometry>
        </collision>
    </xacro:macro>
    <!-- BASE_LINK -->
    <link name="summit_xl_base_link">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://meshes/summit_xl_chassis.dae" />
            </geometry>
        </visual>
        <collision>
            <origin rpy="0 0 0 " xyz="0 0 0" />
            <geometry>
                <mesh
                    filename="package://meshes/summit_xl_chassis_collision.dae" />
            </geometry>
        </collision>
        <inertial>
            <mass value="25.0" />
            <origin xyz="0 0 0" />
            <inertia ixx="1.391" ixy="0.004" ixz="0.0" iyy="6.853" iyz="0.0" izz="6.125" />
        </inertial>
    </link>
    <!-- DOCKING CONTACTS -->
    <joint name="summit_xl_base_docking_joint" type="fixed">
        <origin rpy="0 0 0 " xyz="0.284 0.012 0.068" />
        <parent link="summit_xl_base_link" />
        <child link="summit_xl_base_docking_contact_link" />
    </joint>
    <!-- DOCKING LINK -->
    <link name="summit_xl_base_docking_contact_link" />

    <!-- LIDAR -->
    <joint name="summit_xl_front_laser_stand_joint" type="fixed">
        <origin rpy="0 0 0 " xyz="0 0 0.276" />
        <parent link="summit_xl_base_link" />
        <child link="summit_xl_laser_stand_link" />
    </joint>
    <link name="summit_xl_laser_stand_link">
        <visual>
            <origin rpy="0 0 0 " xyz="0 0 0.026" />
            <geometry>
                <cylinder length="0.052" radius="0.015" />
            </geometry>
        </visual>
        <xacro:collision_cylinder xyz="0.0 0.0 0.026" rpy="0 0 0" length="0.052"
            radius="0.015" /> <!-- VALUE -->
        <xacro:inertial_cylinder xyz="0.0 0.0 0.026" rpy="0 0 0" length="0.052"
            radius="0.015" />
    </link>
    <joint name="summit_xl_front_laser_base_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0 0 0.052" /> <!-- z 0,33 -->
        <parent link="summit_xl_laser_stand_link" />
        <child link="summit_xl_front_laser_base_link" />
    </joint>
    <link name="summit_xl_front_laser_base_link">
        <visual>
            <geometry>
                <mesh
                    filename="package://meshes/hokuyo_ust_10lx.dae" />
            </geometry>
        </visual>
        <collision>
            <geometry>
                <mesh
                    filename="package://meshes/hokuyo_ust_10lx.dae" />
            </geometry>
        </collision>
    </link>
    <joint name="summit_xl_imu_joint" type="fixed">
        <axis xyz="1 0 0" />
        <origin rpy="0 0 0" xyz="-0.18 0.0 0.170" />
        <parent link="summit_xl_base_link" />
        <child link="summit_xl_imu_link" />
    </joint>
    <!-- IMU -->
    <link name="summit_xl_imu_link">
        <inertial>
            <origin rpy="0 0 0" xyz="0.0 0 0.01" />
            <mass value="0.005" />
            <inertia ixx="8.333333333333334e-10" ixy="0" ixz="0" iyy="8.333333333333334e-10" iyz="0"
                izz="8.333333333333334e-10" />
        </inertial>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <box size="0.001 0.001 0.001" />
            </geometry>
        </visual>
    </link>

    <!-- Wheels -->
    <!-- Wheel parameters -->
    <xacro:property name="wheel_offset_x" value="0.229" />    <!-- x,y,z in translation from base_link
    to the center of the wheel -->
    <xacro:property name="wheel_offset_y" value="0.235" />
    <xacro:property name="wheel_offset_z" value="0.0" />
    <xacro:property name="omni_wheel_radius" value="0.127" />
    <xacro:property name="omni_wheel_height" value="0.087" />
    <xacro:property name="omni_wheel_mass" value="6.5" /> <!-- in kg-->
    <xacro:property name="PI" value="3.1415926535897931" />
    <!-- Flag to select the high or low quality model -->
    <xacro:property name="hq" value="true" />

    <xacro:arg name="prefix" default="summit_xl_" />
    <xacro:arg name="omni_wheels" default="True" />

    <xacro:macro name="cylinder_inertia" params="m r h">
        <inertia ixx="${m*(3*r*r+h*h)/12}" ixy="0" ixz="0"
            iyy="${m*r*r/2}" iyz="0"
            izz="${m*(3*r*r+h*h)/12}" />
    </xacro:macro>
    <xacro:macro name="omni_wheel" params="prefix parent *origin reflect hq">
        <joint name="${prefix}_wheel_joint" type="continuous">
            <parent link="${parent}" />
            <child link="${prefix}_wheel_link" />
            <xacro:insert_block name="origin" />
            <axis xyz="0 0 0" rpy="0 0 0" />
            <limit effort="100" velocity="100" />
            <joint_properties damping="0.0" friction="0.0" />
        </joint>

        <link name="${prefix}_wheel_link">
            <visual>
                <xacro:if value="${hq}">
                    <origin xyz="0 0 0" rpy="0 0 0" />
                    <xacro:if value="${reflect}">
                        <geometry>
                            <mesh
                                filename="package://meshes/omni_wheel_1.dae" />
                        </geometry>
                    </xacro:if>
                    <xacro:unless value="${reflect}">
                        <geometry>
                            <mesh
                                filename="package://meshes/omni_wheel_2.dae" />
                        </geometry>
                    </xacro:unless>
                </xacro:if>
                <xacro:unless value="${hq}">
                    <origin xyz="0 0 0" rpy="0 0 0" />
                    <geometry>
                        <sphere radius="${omni_wheel_radius}" />
                    </geometry>
                </xacro:unless>

                <material name="darkgrey">
                    <color rgba="0.2 0.2 0.2 1" />
                </material>
            </visual>

            <collision>
                <origin xyz="0 0 0" rpy="${PI/2} 0 0" />
                <geometry>

                    <xacro:if value="${reflect}">
                        <cylinder length="0.06" radius="0.115" />
                    </xacro:if>
                    <xacro:unless value="${reflect}">
                        <cylinder length="0.06" radius="0.115" />
                    </xacro:unless>

                </geometry>
            </collision>

            <inertial>
                <mass value="${omni_wheel_mass}" />
                <origin xyz="0 0 0" />
                <xacro:cylinder_inertia m="${omni_wheel_mass}" r="${omni_wheel_radius}"
                    h="${omni_wheel_height}" />
            </inertial>
        </link>
    </xacro:macro>
    <xacro:macro name="summit_wheel" params="prefix publish_bf hq">
        <xacro:if value="$(arg omni_wheels)">
            <xacro:omni_wheel prefix="$(arg prefix)front_right" parent="$(arg prefix)base_link"
                reflect="False" hq="${hq}">
                <origin xyz="${wheel_offset_x} -${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0" />
            </xacro:omni_wheel>

            <xacro:omni_wheel prefix="$(arg prefix)front_left" parent="$(arg prefix)base_link"
                reflect="True" hq="${hq}">
                <origin xyz="${wheel_offset_x} ${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0" />
            </xacro:omni_wheel>

            <xacro:omni_wheel prefix="$(arg prefix)back_left" parent="$(arg prefix)base_link"
                reflect="False" hq="${hq}">
                <origin xyz="-${wheel_offset_x} ${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0" />
            </xacro:omni_wheel>

            <xacro:omni_wheel prefix="$(arg prefix)back_right" parent="$(arg prefix)base_link"
                reflect="true" hq="${hq}">
                <origin xyz="-${wheel_offset_x} -${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0" />
            </xacro:omni_wheel>
        </xacro:if>
    </xacro:macro>
    <xacro:summit_wheel prefix="$(arg prefix)" publish_bf="true" hq="true" />
    <!-- 
    <joint name="summit_xl_front_right_roller0_joint" type="continuous">
        <origin xyz="0 ${0.0895*cos(1)} ${0.0895*sin(1)}"
        rpy="${atan(-tan(1)*sqrt(2.0))} ${asin(cos(1)/sqrt(2.0))} ${atan(sin(1))}" />
        <parent link="summit_xl_front_right_wheel_link"/>
        <child link="summit_xl_front_right_roller0_link"/>
    </joint>
    <link name="summit_xl_front_right_roller0_link">
        <collision>
            <geometry>
                <cylinder length="0.06" radius="0.115" />
            </geometry>
        </collision>
    </link>
-->


    <xacro:macro name="roller_origin" params="th side">

        <xacro:if value="${side==1}">
            <axis xyz="1.0 0.0 0.0" />
            <origin xyz="${0.107*cos(th)} 0 ${0.107*sin(th)}"
                rpy="${asin(cos(th)/sqrt(2.0))} ${atan(-tan(th)*sqrt(2.0))} ${atan(sin(th))}" />


            <!-- rpy="${pi/2} 0 ${-th-pi/2}" /> -->

            <!-- rpy="${-pi/4} ${asin(cos(th)/sqrt(2.0))} ${-th-pi/4}" /> -->

            <!--  rpy="${atan(-tan(th)*sqrt(2.0))} ${asin(cos(th)/sqrt(2.0))} ${atan(sin(th))}" -->

        </xacro:if>

        <xacro:if value="${side==-1}">
            <axis xyz="1.0 0.0 0.0" />
            <origin xyz="${0.107*cos(th)} 0 ${0.107*sin(th)}"
                rpy="${asin(-cos(th)/sqrt(2.0))} ${atan(-tan(th)*sqrt(2.0))} ${atan(-sin(th))}" />


            <!-- rpy="${-pi/2} 0 ${th+pi/2}" /> -->


            <!-- rpy="${-pi/4} ${asin(-cos(th)/sqrt(2.0))} ${th-pi/4}" /> -->

            <!--  rpy="${atan(-tan(th)*sqrt(2.0))} ${asin(-cos(th)/sqrt(2.0))} ${atan(-sin(th))}" -->
        </xacro:if>

    </xacro:macro>

    <xacro:macro name="roller_loop" params="name side num loop">

        <xacro:if value="${loop}">

            <joint name="${name}_roller${loop}_joint" type="continuous">
                <xacro:roller_origin th="${radians(360/num*(loop-1))}" side="${side}" />
                <parent link="summit_xl_${name}_wheel_link" />
                <child link="${name}_roller${loop}_link" />
            </joint>

            <link name="${name}_roller${loop}_link">

                <xacro:collision_sphere rpy="0 0 0" xyz="-0.00051 0 -0.035" radius="0.015" />
                <xacro:inertial_sphere rpy="0 0 0" xyz="-0.00051 0 -0.035" radius="0.015" />
                <xacro:collision_sphere rpy="0 0 0" xyz="-0.00051 0 0.035" radius="0.015" />
                <xacro:inertial_sphere rpy="0 0 0" xyz="-0.00051 0 0.035" radius="0.015" />
                <xacro:collision_sphere rpy="0 0 0" xyz="0 0 0" radius="0.019" />
                <xacro:inertial_sphere rpy="0 0 0" xyz="0 0 0" radius="0.019" />
                <xacro:collision_sphere rpy="0 0 0" xyz="0 0 0.0175" radius="0.017" />
                <xacro:inertial_sphere rpy="0 0 0" xyz="0 0 0.0175" radius="0.017" />
                <xacro:collision_sphere rpy="0 0 0" xyz="0 0 -0.0175" radius="0.017" />
                <xacro:inertial_sphere rpy="0 0 0" xyz="0 0 -0.0175" radius="0.017" />


                <!-- <xacro:collision_cylinder rpy="0.0 0.0 0.0" length="0.092" radius="0.013" /> 
                 <xacro:collision_sphere rpy="0 0 0" xyz="0 0 0.01075" radius="0.0204" />
                 <xacro:inertial_sphere rpy="0 0 0" xyz="0 0 0.01075" radius="0.0204" />
                <xacro:collision_sphere rpy="0 0 0" xyz="0 0 -0.01075" radius="0.0204" />
                <xacro:inertial_sphere rpy="0 0 0" xyz="0 0 -0.01075" radius="0.0204" />
                <xacro:collision_sphere rpy="0 0 0" xyz="0 0 0.02406" radius="0.0204" />
                <xacro:inertial_sphere rpy="0 0 0" xyz="0 0 0.02406" radius="0.0204" />
                <xacro:collision_sphere rpy="0 0 0" xyz="0 0 0.03456" radius="0.0204" />
                <xacro:inertial_sphere rpy="0 0 0" xyz="0 0 0.03456" radius="0.0204" />
                <xacro:collision_sphere rpy="0 0 0" xyz="0 0 -0.02406" radius="0.0204" />
                <xacro:inertial_sphere rpy="0 0 0" xyz="0 0 -0.02406" radius="0.0204" />
                 <xacro:collision_sphere rpy="0 0 0" xyz="0 0 -0.03456" radius="0.014" />
                <xacro:inertial_sphere rpy="0 0 0" xyz="0 0 -0.03456" radius="0.014" /> -->
                <!--<xacro:collision_sphere
                xyz="0 0 0" radius="0.025" /> -->
                <!-- <xacro:inertial_cylinder rpy="0 0 0" length="0.092" radius="0.02" /> -->
                <!--<xacro:inertial_sphere
                rpy="0 0 0" radius="0.025" /> -->

            </link>


            <xacro:roller_loop name="${name}" side="${side}" num="${num}" loop="${loop - 1}" />

        </xacro:if>

    </xacro:macro>

    <xacro:macro name="rollers_link" params="name side">
        <xacro:roller_loop name="${name}" side="${side}" num="12" loop="12" />
    </xacro:macro>
    <xacro:rollers_link name="front_right" side="-1" />
    <xacro:rollers_link name="back_right" side="1" />
    <xacro:rollers_link name="front_left" side="1" />
    <xacro:rollers_link name="back_left" side="-1" />


    <!-- ROLLERS 
    <xacro:macro name="roller_origin" params="th side">

        <xacro:if value="${side==1}">
            <origin xyz="0 ${0.0895*cos(th)} ${0.0895*sin(th)}"
                rpy="${atan(-tan(th)*sqrt(2.0))} ${asin(cos(th)/sqrt(2.0))} ${atan(sin(th))}" />
        </xacro:if>

        <xacro:if value="${side==-1}">
            <origin xyz="0 ${0.0895*cos(th)} ${0.0895*sin(th)}"
                rpy="${atan(-tan(th)*sqrt(2.0))} ${asin(-cos(th)/sqrt(2.0))} ${atan(-sin(th))}" />
        </xacro:if>

    </xacro:macro>

    <xacro:macro name="roller_loop" params="name side num loop">

        <xacro:if value="${loop}">

            <joint name="$(arg prefix)${name}_roller${loop}_joint" type="continuous">
                <xacro:roller_origin th="${radians(360/num*(loop-1))}" side="${side}" />
                <axis xyz="1 0 0" />
                <parent link="$(arg prefix)${name}_wheel_link" />
                <child link="$(arg prefix)${name}_roller${loop}_link" />
                <dynamics damping="0.001" friction="0.0001" />
            </joint>

            <link name="${name}_roller${loop}_link">
                <visual>
                    <origin xyz="0 0 0" rpy="0 0 0" />
                </visual>
                <collision>
                    <geometry>
                        <cylinder length="0.06" radius="0.115" />
                    </geometry>
                </collision>
                <inertial>
                    <origin xyz="0 0 0" />
                    <mass value="0.3" />
                    <inertia ixx="0.00024000" ixy="0.0" ixz="0.0"
                        iyy="0.00076000" iyz="0.0"
                        izz="0.00076000" />
                </inertial>
            </link>


            <xacro:roller_loop name="$(arg prefix)${name}" side="${side}" num="${num}"
                loop="${loop - 1}" />

        </xacro:if>

    </xacro:macro>

    <xacro:macro name="rollers_link" params="name side">
        <xacro:roller_loop name="$(arg prefix)${name}" side="${side}" num="12" loop="12" />
    </xacro:macro>

    <xacro:rollers_link name="front_right" side="1" />
    <xacro:rollers_link name="front_left" side="-1" />

    -->
</robot>